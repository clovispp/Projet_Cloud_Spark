[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\daora\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\daora\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.9.9 (Amazon.com Inc. Java 1.8.0_422)
[debug] Load.defaultLoad until apply took 115.2723ms
[debug]           Load.loadUnit: plugins took 97.4644ms
[debug]           Load.loadUnit: defsScala took 0.7983ms
[debug] [Loading] Scanning directory C:\Users\daora\IdeaProjects\Projet_SDA\project
[debug]             Load.loadUnit: mkEval took 8.8376ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\daora\IdeaProjects\Projet_SDA\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 11.5962 ms
[info] loading settings for project projet_sda-build from idea.sbt ...
[debug]               Load.resolveProject(projet_sda-build) took 38.5136ms
[debug]             Load.loadTransitive: finalizeProject(Project(id projet_sda-build, base: C:\Users\daora\IdeaProjects\Projet_SDA\project, plugins: List(<none>))) took 56.4284ms
[debug] [Loading] Done in C:\Users\daora\IdeaProjects\Projet_SDA\project, returning: (projet_sda-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 2913.7614ms
[debug]           Load.loadUnit: cleanEvalClasses took 6.3558ms
[debug]         Load.loadUnit(file:/C:/Users/daora/IdeaProjects/Projet_SDA/project/, ...) took 3030.7607ms
[debug]       Load.apply: load took 3124.4398ms
[debug]       Load.apply: resolveProjects took 4.5836ms
[debug]       Load.apply: finalTransforms took 42.7846ms
[debug]       Load.apply: config.delegates took 4.6722ms
[debug]       Load.apply: Def.make(settings)... took 396.3178ms
[debug]       Load.apply: structureIndex took 122.5109ms
[debug]       Load.apply: mkStreams took 1.7286ms
[info] loading project definition from C:\Users\daora\IdeaProjects\Projet_SDA\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 5567.643ms
[debug]     Load.loadUnit: defsScala took 0.0028ms
[debug] [Loading] Scanning directory C:\Users\daora\IdeaProjects\Projet_SDA
[debug]       Load.loadUnit: mkEval took 0.2086ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\daora\IdeaProjects\Projet_SDA, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 2.96 ms
[info] loading settings for project projet_sda from build.sbt ...
[debug]         Load.resolveProject(projet_sda) took 36.1687ms
[debug]       Load.loadTransitive: finalizeProject(Project(id projet_sda, base: C:\Users\daora\IdeaProjects\Projet_SDA, plugins: List(<none>))) took 39.9012ms
[debug] [Loading] Done in C:\Users\daora\IdeaProjects\Projet_SDA, returning: (projet_sda)
[debug]     Load.loadUnit: loadedProjectsRaw took 2045.033ms
[debug]     Load.loadUnit: cleanEvalClasses took 16.3267ms
[debug]   Load.loadUnit(file:/C:/Users/daora/IdeaProjects/Projet_SDA/, ...) took 7630.1916ms
[debug] Load.apply: load took 7650.9746ms
[debug] Load.apply: resolveProjects took 0.1288ms
[debug] Load.apply: finalTransforms took 31.8597ms
[debug] Load.apply: config.delegates took 1.4849ms
[debug] Load.apply: Def.make(settings)... took 110.0381ms
[debug] Load.apply: structureIndex took 42.5303ms
[debug] Load.apply: mkStreams took 0.004ms
[info] set current project to Projet_SDA (in build file:/C:/Users/daora/IdeaProjects/Projet_SDA/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(idea-shell, None, None)
